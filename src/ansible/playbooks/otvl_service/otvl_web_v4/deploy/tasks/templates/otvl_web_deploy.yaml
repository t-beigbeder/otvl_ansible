apiVersion: v1
kind: Pod
metadata:
  name: {{ current_site_item.name }}-papi
  labels:
    app.kubernetes.io/name: {{ current_site_item.name }}-lapi
spec:
  securityContext:
    runAsUser: {{ current_site_item.uid }}
    runAsGroup: {{ current_site_item.uid }}
    fsGroup: {{ current_site_item.fs_group }}
  containers:
  - name: {{ current_site_item.name }}-apy
    image: "{{ combined_otvl.otvl_web_v4.docker_registry }}/{{ combined_otvl.otvl_web_v4.cabri_sched_image }}"
    command: ["/bin/sh"]
    args: ["-c", "/entrypoint.sh /usr/local/bin/cabri schedule --pfile /etc/cabri-pfile --sfile /etc/cabri-sfile.yaml --http --address :{{ current_site_item.api_sync_port }} --haslog"]
    ports:
    - containerPort: {{ current_site_item.api_sync_port }}
    volumeMounts:
    - name: "{{ current_site_item.name }}-api-vol"
      mountPath: /data
    - name: "{{ current_site_item.name }}-api-vsf"
      mountPath: /etc/cabri-sfile.yaml
  - name: {{ current_site_item.name }}-api
    image: "{{ combined_otvl.otvl_web_v4.docker_registry }}/{{ current_site_item.images.api }}:{{ current_site_item.tags.api }}"
    env:
    - name: OTVL_WEB_CONFIG_PATH
      value: "{{ current_site_item.api_conf }}"
    command: ["/bin/sh"]
    args: ["-c", "/entrypoint.sh /srv/pkg/otvl_web_server_venv/bin/python -m otvl_web.main"]
    ports:
    - containerPort: {{ current_site_item.api_port }}
    volumeMounts:
    - name: "{{ current_site_item.name }}-api-vol"
      mountPath: /data

  volumes:
  - name: "{{ current_site_item.name }}-api-vol"
    persistentVolumeClaim:
      claimName: "{{ current_site_item.name }}-api-pvc"
  - name: "{{ current_site_item.name }}-api-vsf"
    hostPath:
      path: "/srv/data/pods-cf/cabri-sfile-api-{{ current_site_item.name }}.yaml"
      type: File

  restartPolicy: OnFailure

---
apiVersion: v1
kind: Pod
metadata:
  name: {{ current_site_item.name }}-app
  labels:
    app.kubernetes.io/name: {{ current_site_item.name }}-app
spec:
  securityContext:
    runAsUser: {{ current_site_item.uid }}
    runAsGroup: {{ current_site_item.uid }}
    fsGroup: {{ current_site_item.fs_group }}
  containers:
    - name: sync
      image: "{{ combined_otvl.otvl_web_v4.docker_registry }}/{{ combined_otvl.otvl_web_v4.cabri_sched_image }}"
      command: ["/bin/sh"]
      args: ["-c", "/entrypoint.sh /usr/local/bin/cabri schedule --pfile /etc/cabri-pfile --sfile /etc/cabri-sfile.yaml --http --address :{{ current_site_item.app_sync_port }} --haslog"]
      ports:
        - containerPort: {{ current_site_item.app_sync_port }}
      volumeMounts:
        - name: "{{ current_site_item.name }}-app-vol"
          mountPath: /data
        - name: "{{ current_site_item.name }}-app-vsf"
          mountPath: /etc/cabri-sfile.yaml
    - name: app
      image: "{{ combined_otvl.otvl_web_v4.docker_registry }}/{{ current_site_item.images.app }}:{{ current_site_item.tags.app }}"
      env:
        - name: OTVL_WEB_SERVER_NAME
          value: "{{ current_site_item.ingress_host }}"
        - name: OTVL_WEB_ENABLE_BOTS
          value: "{{ (current_site_item.enable_bots|default(false)) | ternary('1', '', '') }}"

      command: ["/bin/sh"]
      args: ["-c", "/entrypoint.sh /shell/httpd-foreground.sh"]
      ports:
        - containerPort: {{ current_site_item.app_port }}
      volumeMounts:
        - name: "{{ current_site_item.name }}-app-vol"
          mountPath: /data

  volumes:
    - name: "{{ current_site_item.name }}-app-vol"
      persistentVolumeClaim:
        claimName: "{{ current_site_item.name }}-app-pvc"
    - name: "{{ current_site_item.name }}-app-vsf"
      hostPath:
        path: "/srv/data/pods-cf/cabri-sfile-app-{{ current_site_item.name }}.yaml"
        type: File

  restartPolicy: OnFailure

---
apiVersion: v1
kind: Pod
metadata:
  name: {{ current_site_item.name }}-router
  labels:
    app.kubernetes.io/name: {{ current_site_item.name }}-router
spec:
  securityContext:
    runAsUser: {{ current_site_item.uid }}
    runAsGroup: {{ current_site_item.uid }}
  containers:
    - name: {{ current_site_item.name }}-router
      image: "{{ combined_otvl.traefik.image }}"
      command: ["/usr/local/bin/traefik"]
      args: ["--configFile=/traefik/static_config.yml"]
      ports:
        - containerPort: {{ combined_otvl.otvl_web_v4.router_port }}
      volumeMounts:
        - name: "{{ current_site_item.name }}-router-vcf"
          mountPath: /traefik
  volumes:
    - name: "{{ current_site_item.name }}-router-vcf"
      hostPath:
        path: "/srv/data/pods-cf/{{ current_site_item.name }}-traefik"
        type: Directory

  restartPolicy: OnFailure

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ current_site_item.name }}-api"
spec:
  selector:
    app.kubernetes.io/name: {{ current_site_item.name }}-lapi
  ports:
  - name: "sync-port"
    port: {{ current_site_item.api_sync_port }}
    protocol: TCP
  - name: "api-port"
    port: {{ current_site_item.api_port }}
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ current_site_item.name }}-router"
spec:
  selector:
    app.kubernetes.io/name: {{ current_site_item.name }}-router
  ports:
  - name: "router-port"
    port: {{ combined_otvl.otvl_web_v4.router_port }}
    protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ current_site_item.name }}-router"
spec:
  rules:
    - host: "{{ current_site_item.ingress_host }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  "{{ current_site_item.name }}-router"
                port:
                  number: {{ combined_otvl.otvl_web_v4.router_port }}