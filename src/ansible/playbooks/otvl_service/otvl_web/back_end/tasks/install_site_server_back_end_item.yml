---
# install_site_server_back_end_item tasks file for otvl_service/otvl_web/back_end

- name: install_site_server_back_end_item display the site item information
  debug:
    msg: "site item is {{ current_site_item }}"
  when: combined_otvl.debug

- name: Checkout the git project containing the site {{ current_site_item.name }} content if configured
  git:
    repo: "{{ current_site_item.git.repo }}"
    dest: "{{ combined_otvl.config_paths.pkg }}/otvl_web_server_git/{{ current_site_item.name }}"
    version: "{{ current_site_item.git.version }}"
    update: true
    recursive: no
    force: yes
  when: "'git' in current_site_item"
  register: otvl_web_server_git_checkout

- name: Remove flags for otvl_web_server_git_checkout if updated (site {{ current_site_item.name }})
  include_tasks: "{{ role_path }}/../../base_service/tasks/remove_flags_for.yml"
  vars:
    flag_type: otvl_web_server_git
  when:
  - "'git' in current_site_item"
  - otvl_web_server_git_checkout.changed

- name: Flag absent to continue
  include_tasks: "{{ role_path }}/../../base_service/tasks/get_flag_for.yml"
  vars:
    flag_type: otvl_web_server_git
    flag_item: "{{ current_site_item.name }}"

- name: Create and configure tornado site data for {{ current_site_item.name }} if configured
  block:

  - name: Clean-up the git project copy containing the site {{ current_site_item.name }}
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}/config"
      - "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}/pages"

  - name: Create server config and data directories for {{ current_site_item.name }}
    file:
      path: "{{ item }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items:
      - "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}"
      - "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}/config"
      - "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}/pages"

  - name: Install the site item server_config configuration file for {{ current_site_item.name }}
    template:
      src: "otvl_web_back_end/conf/server_config.yml"
      dest: "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}_server_config.yml"
      owner: root
      group: root
      mode: 0644

  - name: Deploy the git project containing the site {{ current_site_item.name }} content
    copy:
      src: "{{ combined_otvl.config_paths.pkg }}/otvl_web_server_git/{{ current_site_item.name }}/{{ current_site_item.git.content_path }}/{{ item }}"
      remote_src: yes
      dest: "{{ combined_otvl.config_paths.data }}/otvl_web/{{ current_site_item.name }}"
      owner: root
      group: root
      mode: u+rwX,go+rX
    with_items: ['config', 'pages']

  - name: Create otvl_web.server python tornado service file for the site {{ current_site_item.name }}
    template:
      src: otvl_web_back_end/systemd/tornado.service
      dest: /etc/systemd/system/tornado_{{ current_site_item.name }}.service
      owner: root
      group: root
      mode: 0644

  - name: no op for notifying tornado
    debug:
      msg: no op for notifying tornado
    notify: Enable the otvl_web.server python tornado services

  rescue:
  - name: rescue for Create and configure tornado site data for {{ current_site_item.name }}
    debug:
      msg: Create and configure tornado site data for {{ current_site_item.name }}
    when: combined_otvl.debug

  when:
  - "'git' in current_site_item"
  - "flag_file_state.failed"

- name: Create server assets directories {{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ combined_otvl.apache.user }}"
    group: "{{ combined_otvl.apache.group }}"
    mode: 0755
  with_items:
    - "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets"
    - "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets/images"
    - "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets/documents"
    - "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets/videos"

- name: Deploy the directory containing the site {{ current_site_item.name }} assets if configured
  copy:
    src: "{{ current_site_item.assets_path }}"
    dest: "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web"
    owner: "{{ combined_otvl.apache.user }}"
    group: "{{ combined_otvl.apache.group }}"
    mode: u+rwX,go+rX
  when: "'assets_path' in current_site_item"

- name: Deploy the remote directory {{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets containing the site {{ current_site_item.name }} assets if configured
  copy:
    src: "{{ current_site_item.remote_assets_path }}/"
    remote_src: yes
    dest: "{{ combined_otvl.apache.www }}/{{ current_site_item.name }}/web/assets"
    mode: "preserve"
  when: "'remote_assets_path' in current_site_item"

###