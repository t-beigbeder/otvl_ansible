---
# included tasks file for otvl_cloud/network_setup

- name: "Define the security group name for {{ var_ip.key }} interface on {{ var_server.value.name }}"
  set_fact:
    otvl_iaas_sg_name: "{{ var_ip.key }}_traffic"

- name: "Create the {{ var_ip.key }} interface on {{ var_server.value.name }}"
  os_port:
    cloud: "{{ cloud_name }}"
    state: present
    network: "{{ combined_infra.networks[var_ip.key].name }}"
    name: "{{ var_server.key }}_{{ var_ip.key }}"
    fixed_ips:
    - ip_address: "{{ var_ip.value }}"
    security_groups:
    - "{{ combined_infra.security_groups[otvl_iaas_sg_name] }}"
  register:
    otvl_os_port

- name: "Retrieve facts about the {{ var_server.key }} server {{ var_server.value.name }} on openstack"
  os_server_facts:
    cloud: "{{ cloud_name }}"
    server: "{{ var_server.value.name }}"
    filters:
      metadata:
        hostname: "{{ var_server.value.name }}"
  when: "otvl_os_port.changed or otvl_os_port.port.status == 'DOWN' or combined_infra.otvl_configure.force_otvl_os_port_check"

- name: "Attach interface {{ var_ip.key }} interface on {{ var_server.value.name }}"
  shell: "{{ combined_infra.otvl_configure.openstack_path }}/openstack --os-cloud {{ cloud_name }} server add port {{ var_server.value.name }} {{ var_server.key }}_{{ var_ip.key }}"
  ignore_errors: yes
  register: otvl_shell_os_server_add_port
  when: "(otvl_os_port.changed or otvl_os_port.port.status == 'DOWN' or combined_infra.otvl_configure.force_otvl_os_port_check) and (openstack_servers[0].addresses[combined_infra.networks[var_ip.key].name] is not defined)"

- name: "Handle otvl_shell_os_server_add_port errors for the {{ var_ip.key }} interface on {{ var_server.value.name }}"
  os_port:
    cloud: "{{ cloud_name }}"
    state: absent
    name: "{{ var_server.key }}_{{ var_ip.key }}"
  when:
  - 'otvl_shell_os_server_add_port.rc is defined and otvl_shell_os_server_add_port.rc != 0'

###